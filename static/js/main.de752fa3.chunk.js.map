{"version":3,"sources":["BooksAPI.js","components/book.components.jsx","components/search-book-list.component.jsx","pages/search-page.jsx","components/book-list.component.jsx","components/book-shelf.component.jsx","pages/main-page.jsx","App.js","index.js"],"names":["api","token","localStorage","Math","random","toString","substr","headers","Accept","Authorization","getAll","fetch","concat","then","res","json","data","books","update","id","shelf","method","Object","objectSpread","Content-Type","body","JSON","stringify","search","query","Book","onChange","e","_this","props","updateShelf","target","value","_this$props","this","title","_this$props$authors","authors","imgUrl","_this$props$shelf","react_default","a","createElement","className","style","width","height","backgroundImage","disabled","map","author","i","Component","BookList","_ref","searchBooks","currentBooks","_ref2","imageLinks","book","objectWithoutProperties","some","cBook","find","book_components","key","thumbnail","SearchBooks","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","BooksAPI","setState","error","catch","onSearchChange","event","searchfield","state","react_router_dom","to","type","placeholder","search_book_list_component","BookShelf","book_list_component","MainPage","Books","book_shelf_component","filter","BooksApp","fetchBooks","console","log","_this2","react_router","exact","path","render","main_page","search_page","React","ReactDOM","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.de752fa3.chunk.js","sourcesContent":["\r\nconst api = \"https://reactnd-books-api.udacity.com\"\r\n\r\n\r\n// Generate a unique token for storing your bookshelf data on the backend server.\r\nlet token = localStorage.token\r\nif (!token)\r\n  token = localStorage.token = Math.random().toString(36).substr(-8)\r\n\r\nconst headers = {\r\n  'Accept': 'application/json',\r\n  'Authorization': token\r\n}\r\n\r\nexport const get = (bookId) =>\r\n  fetch(`${api}/books/${bookId}`, { headers })\r\n    .then(res => res.json())\r\n    .then(data => data.book)\r\n\r\nexport const getAll = () =>\r\n  fetch(`${api}/books`, { headers })\r\n    .then(res => res.json())\r\n    .then(data => data.books)\r\n\r\nexport const update = (id, shelf) =>\r\n  fetch(`${api}/books/${id}`, {\r\n    method: 'PUT',\r\n    headers: {\r\n      ...headers,\r\n      'Content-Type': 'application/json'\r\n    },\r\n    body: JSON.stringify({ shelf })\r\n  }).then(res => res.json())\r\n\r\nexport const search = (query) =>\r\n  fetch(`${api}/search`, {\r\n    method: 'POST',\r\n    headers: {\r\n      ...headers,\r\n      'Content-Type': 'application/json'\r\n    },\r\n    body: JSON.stringify({ query })\r\n  }).then(res => res.json())\r\n    .then(data => data.books)\r\n","import React, { Component } from 'react';\r\n\r\nclass Book extends Component {\r\n\r\n  onChange = (e) =>{\r\n    this.props.updateShelf(this.props.id, e.target.value)\r\n  }\r\n  render(){\r\n    const {title, authors=[], imgUrl, shelf=\"none\"} = this.props;\r\n    return (\r\n        <li>\r\n        <div className=\"book\">\r\n        <div className=\"book-top\">\r\n          <div className=\"book-cover\" style={{ width: 128, height: 193, backgroundImage: `url(${imgUrl})`}}></div>\r\n          <div className=\"book-shelf-changer\">\r\n            <select value={shelf} onChange={this.onChange}>\r\n              <option value=\"move\" disabled>Move to...</option>\r\n              <option value=\"currentlyReading\">Currently Reading</option>\r\n              <option value=\"wantToRead\">Want to Read</option>\r\n              <option value=\"read\">Read</option>\r\n              <option value=\"none\">None</option>\r\n            </select>\r\n          </div>\r\n        </div>\r\n        <div className=\"book-title\">{title}</div>\r\n        <div className=\"book-authors\">\r\n        {\r\n            authors.map((author, i) => {\r\n            if(i===0){\r\n                return author;\r\n            }\r\n            else {\r\n                return `, ${author}`\r\n            }\r\n            }\r\n            )}</div>\r\n      </div>\r\n    </li> \r\n    );\r\n          }\r\n};\r\n\r\nexport default Book;","import React from 'react';\r\nimport Book from './book.components';\r\n\r\n\r\nconst BookList = ({updateShelf, searchBooks, currentBooks}) => {\r\n    return (\r\n        <ul className=\"books-grid\">\r\n            {searchBooks ?\r\n                searchBooks.map(({title, authors,imageLinks,id, ...book}, i)=>{\r\n                    if(currentBooks.some(cBook => cBook.id===id)){\r\n                        book.shelf = currentBooks.find(cBook=> cBook.id === id).shelf\r\n                    }\r\n                    return (\r\n                        <Book\r\n                        updateShelf={updateShelf}\r\n                        key={i}\r\n                        id={id}\r\n                        title={title}\r\n                        authors={authors}\r\n                        imgUrl={imageLinks?imageLinks.thumbnail:''}\r\n                        shelf={book.shelf}\r\n                        />\r\n                    )\r\n                })\r\n                : <p>There Is No Books To Display</p>\r\n            }\r\n        </ul>\r\n    );\r\n};\r\n\r\nexport default BookList;","import React, { Component } from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport SearchBookList from '../components/search-book-list.component';\r\nimport * as BooksAPI from '../BooksAPI';\r\n\r\n\r\nclass SearchBooks extends Component {\r\n  constructor(){\r\n    super();\r\n    this.state = {\r\n      searchfield:'',\r\n      searchBooks:[]\r\n    };\r\n}\r\n\r\nsearchBooks = (query) => {\r\n  BooksAPI.search(query)\r\n  .then((searchBooks)=>{\r\n    this.setState({searchBooks:searchBooks.error ? [] : searchBooks});\r\n  })\r\n  .catch((e)=>{this.setState({searchBooks:[]})})\r\n}\r\n\r\nonSearchChange = (event) => {\r\n  this.setState({ searchfield: event.target.value }, () => {\r\n    this.searchBooks(this.state.searchfield);\r\n  })\r\n  \r\n    \r\n\r\n  \r\n}\r\n\r\nrender(){\r\n\r\nconst {updateShelf, currentBooks} = this.props;\r\n\r\n    return (\r\n        <div className=\"search-books\">\r\n        <div className=\"search-books-bar\">\r\n          <Link className=\"close-search\" to=\"/\">Close</Link>\r\n          <div className=\"search-books-input-wrapper\">\r\n            {/*\r\n              NOTES: The search from BooksAPI is limited to a particular set of search terms.\r\n              You can find these search terms here:\r\n              https://github.com/udacity/reactnd-project-myreads-starter/blob/master/SEARCH_TERMS.md\r\n        \r\n              However, remember that the BooksAPI.search method DOES search by title or author. So, don't worry if\r\n              you don't find a specific author or title. Every search is limited by search terms.\r\n            */}\r\n            <input onChange={this.onSearchChange} type=\"text\" placeholder=\"Search by title or author\" />\r\n        \r\n          </div>\r\n        </div>\r\n        <div className=\"search-books-results\">\r\n        <SearchBookList updateShelf={updateShelf} searchBooks={this.state.searchBooks} currentBooks={currentBooks} />\r\n        </div>\r\n        </div>     \r\n    );\r\n          }\r\n};\r\n\r\nexport default SearchBooks;","import React from 'react';\r\nimport Book from './book.components';\r\n\r\n\r\nconst BookList = ({updateShelf, books}) => {\r\n    return (\r\n        <ul className=\"books-grid\">\r\n            {books?\r\n                books.map(({title, authors,imageLinks,shelf, ...book}, i)=>{\r\n                    return (\r\n                        <Book\r\n                        updateShelf={updateShelf}\r\n                        key={i}\r\n                        id={book.id}\r\n                        title={title}\r\n                        authors={authors}\r\n                        imgUrl={imageLinks?imageLinks.thumbnail:''}\r\n                        shelf={shelf}\r\n                        />\r\n                    )\r\n                })\r\n                : <p>There Is No Books To Display</p>\r\n            }\r\n        </ul>\r\n    );\r\n};\r\n\r\nexport default BookList;","import React from 'react';\r\nimport BookList from './book-list.component';\r\n\r\nconst BookShelf = ({updateShelf, title, books}) => {\r\n    return (\r\n        <div className=\"bookshelf\">\r\n        <h2 className=\"bookshelf-title\">{title}</h2>\r\n        <div className=\"bookshelf-books\">\r\n            <BookList updateShelf={updateShelf} books={books}/>\r\n        </div>\r\n      </div> \r\n\r\n    );\r\n};\r\n\r\nexport default BookShelf;","import React from 'react';\r\nimport BookShelf from '../components/book-shelf.component';\r\nimport {Link} from 'react-router-dom';\r\n\r\nconst MainPage = ({updateShelf, Books}) => {\r\n    return (\r\n        <div>\r\n        <div className=\"list-books\">\r\n        <div className=\"list-books-title\">\r\n          <h1>MyReads</h1>\r\n        </div>\r\n        <div className=\"list-books-content\">\r\n          <div>\r\n          <BookShelf updateShelf={updateShelf} title='Currently Reading' books={Books.filter((book)=>{return(book.shelf==='currentlyReading')})}/>\r\n          <BookShelf updateShelf={updateShelf} title='Want to Read' books={Books.filter((book)=>{return(book.shelf==='wantToRead')})}/>\r\n          <BookShelf updateShelf={updateShelf} title='Read' books={Books.filter((book)=>{return(book.shelf==='read')})}/>\r\n          </div>\r\n        </div>\r\n        <div className=\"open-search\">\r\n          <Link className='btn' to=\"/search\">Add a book</Link>\r\n        </div>\r\n      </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default MainPage;","import React from 'react'\r\nimport * as BooksAPI from './BooksAPI'\r\nimport './App.css'\r\nimport SearchBox from './pages/search-page';\r\nimport MainPage from './pages/main-page.jsx';\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route\r\n} from \"react-router-dom\";\r\n\r\nclass BooksApp extends React.Component {\r\n  constructor(){\r\n\t\tsuper();\r\n  this.state = {\r\n   books:[]\r\n  }\r\n  \r\n}\r\n\r\ncomponentDidMount(){\r\n  this.fetchBooks();\r\n}\r\n\r\nfetchBooks = () => {\r\n  BooksAPI.getAll()\r\n  .then((books) => {\r\n    this.setState({books});\r\n});\r\n}\r\n\r\nupdateShelf = (id, shelf) => {\r\n  console.log(id,\"id\")\r\n  BooksAPI.update(id, shelf)\r\n  .then(() => {\r\n    this.fetchBooks();\r\n  })\r\n}\r\n\r\n\r\n\r\n  render() {\r\n    return (\r\n      <Router>\r\n      <Switch>\r\n      <div className=\"app\">\r\n      <Route exact path='/' \r\n      render={() => (\r\n        <MainPage updateShelf={this.updateShelf} Books={this.state.books}/>\r\n      )}\r\n     />\r\n     <Route exact path='/search' \r\n     render={() => (\r\n      <SearchBox updateShelf={this.updateShelf} currentBooks={this.state.books}/>\r\n    )}\r\n     />\r\n      </div>\r\n      </Switch>\r\n      </Router>\r\n    )\r\n  }\r\n}\r\n\r\nexport default BooksApp\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport App from './App'\r\nimport './index.css'\r\n\r\nReactDOM.render(<App />, document.getElementById('root'))\r\n"],"sourceRoot":""}